(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{307:function(s,t,a){"use strict";a.r(t);var e=a(32),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"js-基础知识-6-异步编程基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-基础知识-6-异步编程基础"}},[s._v("#")]),s._v(" JS 基础知识(6)--异步编程基础")]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#异步编程发展历史"}},[s._v("异步编程发展历史")]),a("ul",[a("li",[a("a",{attrs:{href:"#使用回调函数"}},[s._v("使用回调函数")])]),a("li",[a("a",{attrs:{href:"#使用promise"}},[s._v("使用Promise")])]),a("li",[a("a",{attrs:{href:"#使用generator-co"}},[s._v("使用Generator + co")])]),a("li",[a("a",{attrs:{href:"#使用async-await"}},[s._v("使用async + await")])])])]),a("li",[a("a",{attrs:{href:"#promise"}},[s._v("Promise")]),a("ul",[a("li",[a("a",{attrs:{href:"#什么是promise"}},[s._v("什么是Promise")])]),a("li",[a("a",{attrs:{href:"#promise-基础用法"}},[s._v("Promise 基础用法")])]),a("li",[a("a",{attrs:{href:"#promise-常用方法"}},[s._v("Promise 常用方法")])]),a("li",[a("a",{attrs:{href:"#promise-基本使用"}},[s._v("Promise 基本使用")])])])]),a("li",[a("a",{attrs:{href:"#generator-co"}},[s._v("Generator/co")])]),a("li",[a("a",{attrs:{href:"#async-await"}},[s._v("async/await")]),a("ul",[a("li",[a("a",{attrs:{href:"#基本概念"}},[s._v("基本概念")])]),a("li",[a("a",{attrs:{href:"#错误处理"}},[s._v("错误处理")])]),a("li",[a("a",{attrs:{href:"#使用注意点"}},[s._v("使用注意点")])]),a("li",[a("a",{attrs:{href:"#await与循环"}},[s._v("await与循环")])])])]),a("li",[a("a",{attrs:{href:"#参考出处"}},[s._v("参考出处")])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"异步编程发展历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步编程发展历史"}},[s._v("#")]),s._v(" 异步编程发展历史")]),s._v(" "),a("h3",{attrs:{id:"使用回调函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用回调函数"}},[s._v("#")]),s._v(" 使用回调函数")]),s._v(" "),a("p",[s._v("回调函数是经典的JS异步实现手段。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("回调函数的最主要问题是在多层回调下会出现回调地狱(Callback hell)。例如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'4.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("回调地狱的主要问题在于：")]),s._v(" "),a("ul",[a("li",[s._v("可读性、可维护性极差")]),s._v(" "),a("li",[s._v("每个回调函数自行维护自己的错误处理，使代码更加混乱")]),s._v(" "),a("li",[s._v("耦合性太高，牵一发而动全身")])]),s._v(" "),a("h3",{attrs:{id:"使用promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用promise"}},[s._v("#")]),s._v(" 使用Promise")]),s._v(" "),a("p",[s._v("ES6中新添加的语法，能够很好的解决回调地狱的问题，同时合并了错误处理。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("data")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("data")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("data")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'4.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"使用generator-co"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用generator-co"}},[s._v("#")]),s._v(" 使用Generator + co")]),s._v(" "),a("p",[s._v("利用协程完成 Generator 函数，用 co 库让代码依次执行完，同时以同步的方式书写，也让异步操作按顺序执行。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("co")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" r1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" r2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" r3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" r4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'4.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"使用async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用async-await"}},[s._v("#")]),s._v(" 使用async + await")]),s._v(" "),a("p",[s._v("ES7中新添加的关键字。凡事加上async的函数都默认返回一个Promise对象。async + await可以让异步函数书写起来像同步一样：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("readFileAsync")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" f1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" f2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" f3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" f4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'4.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[s._v("#")]),s._v(" Promise")]),s._v(" "),a("h3",{attrs:{id:"什么是promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是promise"}},[s._v("#")]),s._v(" 什么是Promise")]),s._v(" "),a("p",[s._v("Promise 简单来说是一个容器，里面保存着某个未来才会结束的事件(通常是异步事件)的结果。从语法上讲，Promise 是一个对象。")]),s._v(" "),a("p",[s._v("Promise对象有两个特点：")]),s._v(" "),a("ol",[a("li",[s._v("对象的状态不受外界影响。Promise 对象代表一个异步操作，有三种状态：pending（进行中）、fulfilled（已成功）、rejected（已失败）。只有异步操作的结果可以决定当前是哪一种状态，其他任何行为都无法改变这个状态。")]),s._v(" "),a("li",[s._v("一旦状态改变，就固定下来，不会二次改变。Promise 对象只有可能从pending 变为fulfilled 和从pending 变为rejected 两种状态变化方式。一旦发生变化，状态就凝固了，不再发生改变，此时称为resolved（已定型）。")])]),s._v(" "),a("p",[s._v("为了行文方便，下面文章中的resolved 状态指的都是fulfilled 状态，不包括rejected 状态。")]),s._v(" "),a("p",[s._v("Promise也有一些缺点：")]),s._v(" "),a("ul",[a("li",[s._v("无法取消Promise")]),s._v(" "),a("li",[s._v("必须设置回调函数来捕捉错误")])]),s._v(" "),a("p",[s._v("Promise 主要是为了解决两个问题：")]),s._v(" "),a("ul",[a("li",[s._v("回调地狱")]),s._v(" "),a("li",[s._v("多个并发的请求")])]),s._v(" "),a("h3",{attrs:{id:"promise-基础用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-基础用法"}},[s._v("#")]),s._v(" Promise 基础用法")]),s._v(" "),a("p",[s._v("这一部分的详情请见"),a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise",target:"_blank",rel:"noopener noreferrer"}},[s._v("阮一峰"),a("OutboundLink")],1),s._v("老师的文章，写的非常详尽，我在这里不再额外赘述，只列出一些重要结论，具体的细节以及代码示意在阮老师的文章中可以更好的学习。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Promise 对象是一个构造函数，用来生成Promise 实例。")])]),s._v(" "),a("li",[a("p",[s._v("Promise 构造函数接受一个"),a("strong",[s._v("函数")]),s._v("作为参数，该函数也有两个参数，分别是resolve 和 reject。"),a("br"),s._v("\nresolve 函数的作用是：将Promise 对象的状态从pending 变为 resolved，在异步操作成功时调用，并将异步操作的结果作为参数传递出去;"),a("br"),s._v("\nreject 函数的作用是：将Promise 对象的状态从pending 变为rejected，在异步操作失败时调用，并将异步操作报出的错误，作为函数传递出去。")])]),s._v(" "),a("li",[a("p",[s._v("Promise 实例生成以后，可以使用then 方法分别指定resolved 状态和reject 状态的回调函数。then 方法可以接受"),a("strong",[s._v("两个回调函数作为参数")]),s._v("。第一个回调函数是Promise 对象变为resolved 时调用，第二个回调函数是Promise 对象变为rejected 时调用。第二个回调函数是可选的，不一定要提供。")])]),s._v(" "),a("li",[a("p",[s._v("请注意，"),a("strong",[s._v("Promise 新建以后会立即执行")])])]),s._v(" "),a("li",[a("p",[s._v("如果调用resolve 函数和reject 函数时带有参数，那么它们的参数会被传递给回调函数。reject 函数的参数通常是Error 对象的实例，表示抛出的错误；resolve 函数的参数除了正常的值以外，还可能是另一个 Promise 实例。这个时候，原Promise 实例的状态由参数Promise 实例的状态决定。")])]),s._v(" "),a("li",[a("p",[s._v("调用resolve 或reject "),a("strong",[s._v("并不会终结 Promise 的参数函数的执行")]),s._v("。一般来说，调用resolve 或reject 以后，Promise 的使命就完成了，后继操作应该放到then 方法里面，而不应该直接写在resolve 或reject 的后面。所以，最好在它们前面加上return 语句，这样就不会有意外。")])])]),s._v(" "),a("h3",{attrs:{id:"promise-常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-常用方法"}},[s._v("#")]),s._v(" Promise 常用方法")]),s._v(" "),a("p",[s._v("同样的，这一部分"),a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise",target:"_blank",rel:"noopener noreferrer"}},[s._v("阮一峰"),a("OutboundLink")],1),s._v("老师的文章中已经写的非常的详尽，我在这里不再额外赘述，只列出大纲以及重要结论，具体的细节在阮老师的文章中可以更好的学习。")]),s._v(" "),a("p",[s._v("常用方法主要有下面的几种。"),a("br"),s._v("\n在这些方法中:"),a("br"),s._v(" "),a("code",[s._v("Promise.prototype.xxx()")]),s._v("的方法是Promise 实例所具有的方法；"),a("br"),s._v(" "),a("code",[s._v("Promise.xxx()")]),s._v("会返回一个新的Promise 实例。")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("Promise.prototype.then()")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("then")]),s._v("的作用是为Promise 实例添加状态改变时的回调函数。它的参数是两个函数，第一个是resolved 状态的回调函数，第二个（可选）是rejected 状态的回调函数。")]),s._v(" "),a("li",[a("code",[s._v("then")]),s._v("方法返回一个新的Promise 实例（不是原来那个Promise 实例）。因此可以使用"),a("strong",[s._v("链式写法")]),s._v("，即"),a("code",[s._v("then")]),s._v("方法后面再调用另一个"),a("code",[s._v("then")]),s._v("方法。"),a("strong",[s._v("第一个回调函数的返回结果会作为参数传入第二个回调函数。")])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise.prototype.catch()")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("catch")]),s._v("方法的作用是捕捉并处理错误。也就是说，当Promise 实例的状态变为rejected 时，就会调用"),a("code",[s._v("catch")]),s._v("方法指定的回调函数。")]),s._v(" "),a("li",[s._v("不仅如此，如果"),a("code",[s._v("then")]),s._v("方法中的回调函数在运行中发生错误，也会被"),a("code",[s._v("catch")]),s._v("方法捕获。")]),s._v(" "),a("li",[s._v("Promise 实例的错误具有"),a("strong",[s._v("冒泡")]),s._v("性质，会一直向后传递，直到被捕获为止。也就是说，错误总会被下一个"),a("code",[s._v("catch")]),s._v("语句捕获。")]),s._v(" "),a("li",[s._v("基于上一条，一个"),a("code",[s._v("catch")]),s._v("方法可能不止处理一个Promise 实例的错误，他需要"),a("strong",[s._v("处理所有在他前面产生的Promise 实例的错误")]),s._v("（包括"),a("code",[s._v("then")]),s._v("方法中的错误）。")]),s._v(" "),a("li",[s._v("一般来说，不要在"),a("code",[s._v("then")]),s._v("方法中定义rejected 状态的回调函数（即"),a("code",[s._v("then")]),s._v("的第二个参数）。"),a("strong",[s._v("总是使用"),a("code",[s._v("catch")]),s._v("方法来处理错误。")])]),s._v(" "),a("li",[s._v("一般来说，使用Promise 实例时都要跟上"),a("code",[s._v("catch")]),s._v("方法来处理错误。")]),s._v(" "),a("li",[a("code",[s._v("catch")]),s._v("方法返回的还是一个Promise 对象，因此还可以继续"),a("code",[s._v("then")]),s._v("。"),a("code",[s._v("catch")]),s._v("也可以抛出错误，被在他后面的"),a("code",[s._v("catch")]),s._v("捕获。")]),s._v(" "),a("li",[s._v("如果Promise 实例的错误没有被处理，那么这个Promise 实例的状态会变为rejected；如果错误被"),a("code",[s._v("catch")]),s._v("了，那么会回返回一个新的Promise 实例，这个Promise 实例的状态是resolved（如果没有新的错误）。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise.prototype.finally()")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("finally")]),s._v("方法用于无论Promise 对象的状态如何，都要执行的操作。")]),s._v(" "),a("li",[a("code",[s._v("finally")]),s._v("方法的回调函数不接受任何参数。"),a("code",[s._v("finally")]),s._v("方法没有办法知道也不需要知道Promise 实例的执行结果，"),a("strong",[s._v("写在"),a("code",[s._v("finally")]),s._v("方法中的语句应该是与状态无关的")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("finally")]),s._v("方法总是会返回原来的值。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise.resolve()")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Promise.resolve()")]),s._v("方法会返回一个新的 Promise 实例，该实例的状态为resolved。根据"),a("strong",[s._v("方法参数")]),s._v("的不同，"),a("code",[s._v("Promise.resolve()")]),s._v("的返回不同。")]),s._v(" "),a("li",[s._v("当参数是一个Promise 实例，"),a("code",[s._v("Promise.resolve()")]),s._v("不会做任何修改，直接返回该实例。")]),s._v(" "),a("li",[s._v("当参数是一个"),a("strong",[s._v("thenable （具有then 方法）对象")]),s._v("的时候，"),a("code",[s._v("Promise.resolve()")]),s._v("会将该对象转为Promise 实例，然后立即执行"),a("code",[s._v("then")]),s._v(" 方法.")]),s._v(" "),a("li",[s._v("当参数是一个不具有then 方法的对象或者根本不是对象时，"),a("code",[s._v("Promise.resolve()")]),s._v("会返回一个Promise 实例，状态为resolved。参数会传递到回调函数中。")]),s._v(" "),a("li",[s._v("没有参数时，直接返回一个Promise 实例，状态为resolved。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise.reject()")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Promise.reject(reason)")]),s._v("方法会返回一个新的 Promise 实例，该实例的状态为rejected.")]),s._v(" "),a("li",[a("code",[s._v("Promise.reject()")]),s._v("方法的参数，会原封不动地作为reject 的理由，变成后续方法的参数。")]),s._v(" "),a("li",[a("code",[s._v("reject")]),s._v("方法的作用，等同于抛出错误。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise.all()")])]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("Promise.all()")]),s._v('用于将多个Promise 实例，包装成一个新的Promise 实例（下文称"包装实例"）。')])]),s._v(" "),a("li",[a("p",[s._v("一般来说，"),a("code",[s._v("Promise.all()")]),s._v("方法接受一个数组作为参数，且数组中的每一项都是一个Promise 实例。如果有数组成员不是Promise 实例，利用"),a("code",[s._v("Promise.resolve()")]),s._v("把它变成Promise 实例。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise.all()")]),s._v("的包装实例状态由参数数组的数组成员的状态决定：")]),s._v(" "),a("ul",[a("li",[s._v("只有当"),a("strong",[s._v("所有数组成员的状态全变成resolved")]),s._v("，包装实例的状态才会变成resolved。此时全部数组成员的返回值组成一个数组，传给包装实例的回调函数。")]),s._v(" "),a("li",[s._v("只要"),a("strong",[s._v("有一个数组成员的状态变成rejected")]),s._v("，包装实例的状态就变成rejected。此时第一个被reject 的实例的返回值会作为参数传递给包装实例的回调函数。")])])]),s._v(" "),a("li",[a("p",[s._v("如果作为参数的Promise 实例自己定义了"),a("code",[s._v("catch")]),s._v("方法，那么如果他一旦被rejected，并不会触发"),a("code",[s._v("Promise.all()")]),s._v("的"),a("code",[s._v("catch")]),s._v("方法。如果参数Promise 实例没有定义"),a("code",[s._v("catch")]),s._v("方法，那么会调用"),a("code",[s._v("Promise.all()")]),s._v("的"),a("code",[s._v("catch")]),s._v("方法。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise.all()")]),s._v("的参数可以不是数组，但必须具有Iterator 接口，且返回的每个成员都是 Promise 实例。")])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise.race()")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Promise.race()")]),s._v("与"),a("code",[s._v("Promise.all()")]),s._v("类似，用于将多个Promise 实例，包装成一个新的Promise 实例。")]),s._v(" "),a("li",[a("code",[s._v("Promise.race()")]),s._v("的参数规则也与"),a("code",[s._v("Promise.all()")]),s._v("类似，接受一个以Promise 实例作为数组成员的数组作为参数。")]),s._v(" "),a("li",[a("code",[s._v("Promise.race()")]),s._v("的包装实例状态是"),a("strong",[s._v("第一个改变状态的参数Promise 实例的状态")]),s._v("。参数Promise 实例的返回值会传递给包装实例的回调函数。")])])])]),s._v(" "),a("p",[s._v("最新方法有下面的几种：")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("Promise.allSettled()")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Promise.allSettled()")]),s._v("方法接受一组 Promise 实例作为参数，包装成一个新的 Promise 实例。只有等到"),a("strong",[s._v("所有这些参数实例都返回结果")]),s._v("，不管是fulfilled 还是rejected ，包装实例才会结束。")]),s._v(" "),a("li",[a("code",[s._v("Promise.allSettled()")]),s._v("方法返回的新的 Promise 实例，一旦结束，状态总是fulfilled，不会变成rejected。")]),s._v(" "),a("li",[s._v("状态变成fulfilled 后，包装实例的监听函数接收到的参数是一个数组，每个数组成员对应一个传入"),a("code",[s._v("Promise.allSettled()")]),s._v("的 Promise 实例。")]),s._v(" "),a("li",[s._v("有时候，我们"),a("strong",[s._v("不关心异步操作的结果，只关心这些操作有没有结束")]),s._v("。这种场景下适用"),a("code",[s._v("Promise.allSettled()")]),s._v("方法。")]),s._v(" "),a("li",[s._v("ES2020新加入。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise.any()")])]),s._v(" "),a("ul",[a("li",[s._v("参数实例有一个变成fulfilled 状态，包装实例就会变成fulfilled 状态；如果所有参数实例都变成rejected 状态，包装实例就会变成rejected 状态。")]),s._v(" "),a("li",[s._v("仍处于"),a("strong",[s._v("提案")]),s._v("状态。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise.try()")])]),s._v(" "),a("ul",[a("li",[s._v("不知道或者不想区分，函数f 是同步函数还是异步操作，但是想用 Promise 来处理它。因为这样就可以不管f 是否包含异步操作，都用then 方法指定下一步流程，用catch 方法处理f抛出的错误。")]),s._v(" "),a("li",[s._v("仍处于"),a("strong",[s._v("提案")]),s._v("状态。")])])])]),s._v(" "),a("h3",{attrs:{id:"promise-基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-基本使用"}},[s._v("#")]),s._v(" Promise 基本使用")]),s._v(" "),a("p",[s._v("Promise 最基本的使用方法如下：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("新建一个Promise 对象。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" promise "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ... some code")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 异步操作成功 */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("调用这个Promise 对象的"),a("code",[s._v("then")]),s._v("方法，注册回调函数。回调函数的参数是一个函数，参数函数的参数是Promise 对象的返回值。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("promise\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 处理value")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("注册"),a("code",[s._v("catch")]),s._v("方法用来捕捉并处理前面可能发生的错误。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("promise\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 处理value")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 处理error")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])]),s._v(" "),a("p",[s._v("以上就是Promise 最基本的使用方法。")]),s._v(" "),a("h2",{attrs:{id:"generator-co"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generator-co"}},[s._v("#")]),s._v(" Generator/co")]),s._v(" "),a("p",[s._v("Generator 生成器函数，在async/await 出现之前可以用来做异步解决方案。一般来说需要配合co 这个第三方库来使用。")]),s._v(" "),a("p",[s._v("现在一般已经不使用Generator/co 进行异步编程。推荐使用async/await 方案。")]),s._v(" "),a("p",[s._v("Generator 的本质用途是用来实现Iterator 迭代器的，用在异步上是他的一个特殊用途。Generator 的详解可以参考"),a("RouterLink",{attrs:{to:"/frontend/JavaScript(4).html"}},[s._v("这里")]),s._v("。")],1),s._v(" "),a("h2",{attrs:{id:"async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[s._v("#")]),s._v(" async/await")]),s._v(" "),a("p",[s._v("async/await 被称为 JS 中"),a("strong",[s._v("异步终极解决方案")]),s._v("。在async 函数中使用await，那么await 这里的代码就会变成同步的，只有等"),a("strong",[s._v("await 后面的Promise 执行完毕后")]),s._v("才会继续下去。")]),s._v(" "),a("p",[s._v("详细内容请参考"),a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/async",target:"_blank",rel:"noopener noreferrer"}},[s._v("阮一峰的async部分"),a("OutboundLink")],1),s._v("内容，这里只记录大纲以及重要性结论。")]),s._v(" "),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[s._v("#")]),s._v(" 基本概念")]),s._v(" "),a("h4",{attrs:{id:"async"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async"}},[s._v("#")]),s._v(" async")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("async 函数返回一个 Promise 对象")]),s._v("，可以使用then方法添加回调函数。")]),s._v(" "),a("li",[s._v("async函数内部抛出错误，会导致"),a("strong",[s._v("返回的Promise 对象变为rejected 状态")]),s._v("。抛出的错误会被"),a("code",[s._v("catch")]),s._v("方法捕捉到。")]),s._v(" "),a("li",[s._v("一般来说，async 函数都需要返回")])]),s._v(" "),a("h4",{attrs:{id:"await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#await"}},[s._v("#")]),s._v(" await")]),s._v(" "),a("ul",[a("li",[s._v("在"),a("strong",[s._v("async函数内部可以使用await命令")]),s._v("，表示等待一个异步函数的返回。"),a("strong",[s._v("await不能够单独使用")]),s._v("。")]),s._v(" "),a("li",[s._v("正常情况下，"),a("strong",[s._v("await 命令后面是一个Promise 对象，返回该对象的结果")]),s._v("。await 后面的Promise 对象不必写"),a("code",[s._v("then")]),s._v(",因为await 可以"),a("strong",[s._v("直接获取后面Promise 对象的resolved 状态")]),s._v("传递出来的参数。")]),s._v(" "),a("li",[s._v("如果await 命令后面不是Promise 对象，就直接返回对应的值；如果await 命令后面是一个thenable 对象，await会将其等同于Promise 对象。")])]),s._v(" "),a("h3",{attrs:{id:"错误处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[s._v("#")]),s._v(" 错误处理")]),s._v(" "),a("ul",[a("li",[s._v("如果await 后面的异步操作出错，那么等同于async 函数返回的Promise 对象被reject，可以被该对象的"),a("code",[s._v("catch")]),s._v("方法捕捉，reject 的参数会传入"),a("code",[s._v("catch")]),s._v("方法。")]),s._v(" "),a("li",[s._v("如果一个async 函数中有多个await 语句，任何一个await 语句后面的Promise 对象变为reject 状态，整个async 函数都会中断执行。")]),s._v(" "),a("li",[s._v("基于以上，可以"),a("strong",[s._v("将await 语句放在"),a("code",[s._v("try...catch")]),s._v("结构里面")]),s._v("，这样不会耽误后面的代码执行；或者在await 后面的Promise 对象再跟一个"),a("code",[s._v("catch")]),s._v(" 方法，处理错误。")])]),s._v(" "),a("h3",{attrs:{id:"使用注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用注意点"}},[s._v("#")]),s._v(" 使用注意点")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("最好把await 命令放在"),a("code",[s._v("try...catch")]),s._v("代码块中。")])]),s._v(" "),a("li",[a("p",[s._v("多个await 命令后面的异步操作，如果"),a("strong",[s._v("不存在继发关系，最好让他们同时触发")]),s._v("。同时触发有两种写法：")]),s._v(" "),a("ul",[a("li",[s._v("使用"),a("code",[s._v("Promise.all()")])]),s._v(" "),a("li",[s._v("见代码：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写法一")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getFoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写法二")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" fooPromise "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getFoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" barPromise "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" fooPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" barPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("async 函数可以保留运行堆栈.")])])]),s._v(" "),a("h3",{attrs:{id:"await与循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#await与循环"}},[s._v("#")]),s._v(" await与循环")]),s._v(" "),a("ul",[a("li",[s._v("对于异步代码，"),a("strong",[s._v("forEach 并不能保证按顺序执行")]),s._v("。")]),s._v(" "),a("li",[s._v("想要在循环中使用await ，需要"),a("strong",[s._v("使用"),a("code",[s._v("for... of")]),s._v(" 语句")]),s._v("。")])]),s._v(" "),a("p",[s._v("解决原理——Iterator")]),s._v(" "),a("h2",{attrs:{id:"参考出处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考出处"}},[s._v("#")]),s._v(" 参考出处")]),s._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise",target:"_blank",rel:"noopener noreferrer"}},[s._v("阮一峰ES6教程-Promise"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/async",target:"_blank",rel:"noopener noreferrer"}},[s._v("阮一峰ES6教程-async"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/book/5bdc715fe51d454e755f75ef/section/5bdc7198518825171726cfce",target:"_blank",rel:"noopener noreferrer"}},[s._v("掘金yck小册"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5dd8b3a851882572f56b578f#heading-30",target:"_blank",rel:"noopener noreferrer"}},[s._v("神三元掘金文章-原生JS(下篇)"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5e3b9ae26fb9a07ca714a5cc",target:"_blank",rel:"noopener noreferrer"}},[s._v("写代码像蔡徐抻的掘金文章-异步编程二三事"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5afe6d3bf265da0b9e654c4b",target:"_blank",rel:"noopener noreferrer"}},[s._v("蔓蔓雒轩的掘金文章-通俗易懂的Promise"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/597724c26fb9a06bb75260e8",target:"_blank",rel:"noopener noreferrer"}},[s._v("艾特老干部的掘金文章-八段代码彻底掌握Promise"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b31a4b7f265da595725f322",target:"_blank",rel:"noopener noreferrer"}},[s._v("lucefer的掘金文章-面试精选之Promise"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5a04066351882517c416715d",target:"_blank",rel:"noopener noreferrer"}},[s._v("石墨文档的掘金文章-Promise 必知必会"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/596e142d5188254b532ce2da",target:"_blank",rel:"noopener noreferrer"}},[s._v("陈惠超的掘金文章-理解 async/await"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b1ffff96fb9a01e345ba704",target:"_blank",rel:"noopener noreferrer"}},[s._v("大Y的掘金文章-一次性让你懂async/await"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5a9516885188257a6b061d72",target:"_blank",rel:"noopener noreferrer"}},[s._v("limingru的掘金文章-与Promise血脉相连的async/await"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);
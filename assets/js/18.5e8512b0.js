(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{311:function(t,s,a){"use strict";a.r(s);var e=a(32),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-基础-异步编程基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-基础-异步编程基础"}},[t._v("#")]),t._v(" JS 基础--异步编程基础")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#异步编程发展历史"}},[t._v("异步编程发展历史")]),a("ul",[a("li",[a("a",{attrs:{href:"#使用回调函数"}},[t._v("使用回调函数")])]),a("li",[a("a",{attrs:{href:"#使用-promise"}},[t._v("使用 Promise")])]),a("li",[a("a",{attrs:{href:"#使用-generator-co"}},[t._v("使用 Generator + co")])]),a("li",[a("a",{attrs:{href:"#使用-async-await"}},[t._v("使用 async + await")])])])]),a("li",[a("a",{attrs:{href:"#promise"}},[t._v("Promise")]),a("ul",[a("li",[a("a",{attrs:{href:"#什么是-promise"}},[t._v("什么是 Promise")])]),a("li",[a("a",{attrs:{href:"#promise-基础用法"}},[t._v("Promise 基础用法")])]),a("li",[a("a",{attrs:{href:"#promise-常用方法"}},[t._v("Promise 常用方法")])]),a("li",[a("a",{attrs:{href:"#promise-基本使用"}},[t._v("Promise 基本使用")])])])]),a("li",[a("a",{attrs:{href:"#generator-co"}},[t._v("Generator/co")])]),a("li",[a("a",{attrs:{href:"#async-await"}},[t._v("async/await")]),a("ul",[a("li",[a("a",{attrs:{href:"#基本概念"}},[t._v("基本概念")])]),a("li",[a("a",{attrs:{href:"#错误处理"}},[t._v("错误处理")])]),a("li",[a("a",{attrs:{href:"#使用注意点"}},[t._v("使用注意点")])]),a("li",[a("a",{attrs:{href:"#await-与循环"}},[t._v("await 与循环")])])])]),a("li",[a("a",{attrs:{href:"#参考出处"}},[t._v("参考出处")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"异步编程发展历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步编程发展历史"}},[t._v("#")]),t._v(" 异步编程发展历史")]),t._v(" "),a("h3",{attrs:{id:"使用回调函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用回调函数"}},[t._v("#")]),t._v(" 使用回调函数")]),t._v(" "),a("p",[t._v("回调函数是经典的 JS 异步实现手段。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("回调函数的最主要问题是在多层回调下会出现回调地狱(Callback hell)。例如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("回调地狱的主要问题在于：")]),t._v(" "),a("ul",[a("li",[t._v("可读性、可维护性极差")]),t._v(" "),a("li",[t._v("每个回调函数自行维护自己的错误处理，使代码更加混乱")]),t._v(" "),a("li",[t._v("耦合性太高，牵一发而动全身")])]),t._v(" "),a("h3",{attrs:{id:"使用-promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-promise"}},[t._v("#")]),t._v(" 使用 Promise")]),t._v(" "),a("p",[t._v("ES6 中新添加的语法，能够很好的解决回调地狱的问题，同时合并了错误处理。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h3",{attrs:{id:"使用-generator-co"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-generator-co"}},[t._v("#")]),t._v(" 使用 Generator + co")]),t._v(" "),a("p",[t._v("利用协程完成 Generator 函数，用 co 库让代码依次执行完，同时以同步的方式书写，也让异步操作按顺序执行。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("co")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" r1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" r2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" r3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" r4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"使用-async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-async-await"}},[t._v("#")]),t._v(" 使用 async + await")]),t._v(" "),a("p",[t._v("ES7 中新添加的关键字。凡事加上 async 的函数都默认返回一个 Promise 对象。async + await 可以让异步函数书写起来像同步一样：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("readFileAsync")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" f1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" f2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" f3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" f4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFilePromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),a("h3",{attrs:{id:"什么是-promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-promise"}},[t._v("#")]),t._v(" 什么是 Promise")]),t._v(" "),a("p",[t._v("Promise 简单来说是一个容器，里面保存着某个未来才会结束的事件(通常是异步事件)的结果。从语法上讲，Promise 是一个对象。")]),t._v(" "),a("p",[t._v("Promise 对象有两个特点：")]),t._v(" "),a("ol",[a("li",[t._v("对象的状态不受外界影响。Promise 对象代表一个异步操作，有三种状态：pending（进行中）、fulfilled（已成功）、rejected（已失败）。只有异步操作的结果可以决定当前是哪一种状态，其他任何行为都无法改变这个状态。")]),t._v(" "),a("li",[t._v("一旦状态改变，就固定下来，不会二次改变。Promise 对象只有可能从 pending 变为 fulfilled 和从 pending 变为 rejected 两种状态变化方式。一旦发生变化，状态就凝固了，不再发生改变，此时称为 resolved（已定型）。")])]),t._v(" "),a("p",[t._v("为了行文方便，下面文章中的 resolved 状态指的都是 fulfilled 状态，不包括 rejected 状态。")]),t._v(" "),a("p",[t._v("Promise 也有一些缺点：")]),t._v(" "),a("ul",[a("li",[t._v("无法取消 Promise")]),t._v(" "),a("li",[t._v("必须设置回调函数来捕捉错误")])]),t._v(" "),a("p",[t._v("Promise 主要是为了解决两个问题：")]),t._v(" "),a("ul",[a("li",[t._v("回调地狱")]),t._v(" "),a("li",[t._v("多个并发的请求")])]),t._v(" "),a("h3",{attrs:{id:"promise-基础用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-基础用法"}},[t._v("#")]),t._v(" Promise 基础用法")]),t._v(" "),a("p",[t._v("这一部分的详情请见"),a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰"),a("OutboundLink")],1),t._v("老师的文章，写的非常详尽，我在这里不再额外赘述，只列出一些重要结论，具体的细节以及代码示意在阮老师的文章中可以更好的学习。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Promise 对象是一个构造函数，用来生成 Promise 实例。")])]),t._v(" "),a("li",[a("p",[t._v("Promise 构造函数接受一个"),a("strong",[t._v("函数")]),t._v("作为参数，该函数也有两个参数，分别是 resolve 和 reject。"),a("br"),t._v("\nresolve 函数的作用是：将 Promise 对象的状态从 pending 变为 resolved，在异步操作成功时调用，并将异步操作的结果作为参数传递出去;"),a("br"),t._v("\nreject 函数的作用是：将 Promise 对象的状态从 pending 变为 rejected，在异步操作失败时调用，并将异步操作报出的错误，作为函数传递出去。")])]),t._v(" "),a("li",[a("p",[t._v("Promise 实例生成以后，可以使用 then 方法分别指定 resolved 状态和 reject 状态的回调函数。then 方法可以接受"),a("strong",[t._v("两个回调函数作为参数")]),t._v("。第一个回调函数是 Promise 对象变为 resolved 时调用，第二个回调函数是 Promise 对象变为 rejected 时调用。第二个回调函数是可选的，不一定要提供。")])]),t._v(" "),a("li",[a("p",[t._v("请注意，"),a("strong",[t._v("Promise 新建以后会立即执行")])])]),t._v(" "),a("li",[a("p",[t._v("如果调用 resolve 函数和 reject 函数时带有参数，那么它们的参数会被传递给回调函数。reject 函数的参数通常是 Error 对象的实例，表示抛出的错误；resolve 函数的参数除了正常的值以外，还可能是另一个 Promise 实例。这个时候，原 Promise 实例的状态由参数 Promise 实例的状态决定。")])]),t._v(" "),a("li",[a("p",[t._v("调用 resolve 或 reject "),a("strong",[t._v("并不会终结 Promise 的参数函数的执行")]),t._v("。一般来说，调用 resolve 或 reject 以后，Promise 的使命就完成了，后继操作应该放到 then 方法里面，而不应该直接写在 resolve 或 reject 的后面。所以，最好在它们前面加上 return 语句，这样就不会有意外。")])])]),t._v(" "),a("h3",{attrs:{id:"promise-常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-常用方法"}},[t._v("#")]),t._v(" Promise 常用方法")]),t._v(" "),a("p",[t._v("同样的，这一部分"),a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰"),a("OutboundLink")],1),t._v("老师的文章中已经写的非常的详尽，我在这里不再额外赘述，只列出大纲以及重要结论，具体的细节在阮老师的文章中可以更好的学习。")]),t._v(" "),a("p",[t._v("常用方法主要有下面的几种。"),a("br"),t._v("\n在这些方法中:"),a("br"),t._v(" "),a("code",[t._v("Promise.prototype.xxx()")]),t._v("的方法是 Promise 实例所具有的方法；"),a("br"),t._v(" "),a("code",[t._v("Promise.xxx()")]),t._v("会返回一个新的 Promise 实例。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Promise.prototype.then()")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("then")]),t._v("的作用是为 Promise 实例添加状态改变时的回调函数。它的参数是两个函数，第一个是 resolved 状态的回调函数，第二个（可选）是 rejected 状态的回调函数。")]),t._v(" "),a("li",[a("code",[t._v("then")]),t._v("方法返回一个新的 Promise 实例（不是原来那个 Promise 实例）。因此可以使用"),a("strong",[t._v("链式写法")]),t._v("，即"),a("code",[t._v("then")]),t._v("方法后面再调用另一个"),a("code",[t._v("then")]),t._v("方法。"),a("strong",[t._v("第一个回调函数的返回结果会作为参数传入第二个回调函数。")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.prototype.catch()")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("catch")]),t._v("方法的作用是捕捉并处理错误。也就是说，当 Promise 实例的状态变为 rejected 时，就会调用"),a("code",[t._v("catch")]),t._v("方法指定的回调函数。")]),t._v(" "),a("li",[t._v("不仅如此，如果"),a("code",[t._v("then")]),t._v("方法中的回调函数在运行中发生错误，也会被"),a("code",[t._v("catch")]),t._v("方法捕获。")]),t._v(" "),a("li",[t._v("Promise 实例的错误具有"),a("strong",[t._v("冒泡")]),t._v("性质，会一直向后传递，直到被捕获为止。也就是说，错误总会被下一个"),a("code",[t._v("catch")]),t._v("语句捕获。")]),t._v(" "),a("li",[t._v("基于上一条，一个"),a("code",[t._v("catch")]),t._v("方法可能不止处理一个 Promise 实例的错误，他需要"),a("strong",[t._v("处理所有在他前面产生的 Promise 实例的错误")]),t._v("（包括"),a("code",[t._v("then")]),t._v("方法中的错误）。")]),t._v(" "),a("li",[t._v("一般来说，不要在"),a("code",[t._v("then")]),t._v("方法中定义 rejected 状态的回调函数（即"),a("code",[t._v("then")]),t._v("的第二个参数）。"),a("strong",[t._v("总是使用"),a("code",[t._v("catch")]),t._v("方法来处理错误。")])]),t._v(" "),a("li",[t._v("一般来说，使用 Promise 实例时都要跟上"),a("code",[t._v("catch")]),t._v("方法来处理错误。")]),t._v(" "),a("li",[a("code",[t._v("catch")]),t._v("方法返回的还是一个 Promise 对象，因此还可以继续"),a("code",[t._v("then")]),t._v("。"),a("code",[t._v("catch")]),t._v("也可以抛出错误，被在他后面的"),a("code",[t._v("catch")]),t._v("捕获。")]),t._v(" "),a("li",[t._v("如果 Promise 实例的错误没有被处理，那么这个 Promise 实例的状态会变为 rejected；如果错误被"),a("code",[t._v("catch")]),t._v("了，那么会回返回一个新的 Promise 实例，这个 Promise 实例的状态是 resolved（如果没有新的错误）。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.prototype.finally()")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("finally")]),t._v("方法用于无论 Promise 对象的状态如何，都要执行的操作。")]),t._v(" "),a("li",[a("code",[t._v("finally")]),t._v("方法的回调函数不接受任何参数。"),a("code",[t._v("finally")]),t._v("方法没有办法知道也不需要知道 Promise 实例的执行结果，"),a("strong",[t._v("写在"),a("code",[t._v("finally")]),t._v("方法中的语句应该是与状态无关的")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("finally")]),t._v("方法总是会返回原来的值。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.resolve()")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Promise.resolve()")]),t._v("方法会返回一个新的 Promise 实例，该实例的状态为 resolved。根据"),a("strong",[t._v("方法参数")]),t._v("的不同，"),a("code",[t._v("Promise.resolve()")]),t._v("的返回不同。")]),t._v(" "),a("li",[t._v("当参数是一个 Promise 实例，"),a("code",[t._v("Promise.resolve()")]),t._v("不会做任何修改，直接返回该实例。")]),t._v(" "),a("li",[t._v("当参数是一个"),a("strong",[t._v("thenable （具有 then 方法）对象")]),t._v("的时候，"),a("code",[t._v("Promise.resolve()")]),t._v("会将该对象转为 Promise 实例，然后立即执行"),a("code",[t._v("then")]),t._v(" 方法.")]),t._v(" "),a("li",[t._v("当参数是一个不具有 then 方法的对象或者根本不是对象时，"),a("code",[t._v("Promise.resolve()")]),t._v("会返回一个 Promise 实例，状态为 resolved。参数会传递到回调函数中。")]),t._v(" "),a("li",[t._v("没有参数时，直接返回一个 Promise 实例，状态为 resolved。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.reject()")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Promise.reject(reason)")]),t._v("方法会返回一个新的 Promise 实例，该实例的状态为 rejected.")]),t._v(" "),a("li",[a("code",[t._v("Promise.reject()")]),t._v("方法的参数，会原封不动地作为 reject 的理由，变成后续方法的参数。")]),t._v(" "),a("li",[a("code",[t._v("reject")]),t._v("方法的作用，等同于抛出错误。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.all()")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Promise.all()")]),t._v('用于将多个 Promise 实例，包装成一个新的 Promise 实例（下文称"包装实例"）。')])]),t._v(" "),a("li",[a("p",[t._v("一般来说，"),a("code",[t._v("Promise.all()")]),t._v("方法接受一个数组作为参数，且数组中的每一项都是一个 Promise 实例。如果有数组成员不是 Promise 实例，利用"),a("code",[t._v("Promise.resolve()")]),t._v("把它变成 Promise 实例。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.all()")]),t._v("的包装实例状态由参数数组的数组成员的状态决定：")]),t._v(" "),a("ul",[a("li",[t._v("只有当"),a("strong",[t._v("所有数组成员的状态全变成 resolved")]),t._v("，包装实例的状态才会变成 resolved。此时全部数组成员的返回值组成一个数组，传给包装实例的回调函数。")]),t._v(" "),a("li",[t._v("只要"),a("strong",[t._v("有一个数组成员的状态变成 rejected")]),t._v("，包装实例的状态就变成 rejected。此时第一个被 reject 的实例的返回值会作为参数传递给包装实例的回调函数。")])])]),t._v(" "),a("li",[a("p",[t._v("如果作为参数的 Promise 实例自己定义了"),a("code",[t._v("catch")]),t._v("方法，那么如果他一旦被 rejected，并不会触发"),a("code",[t._v("Promise.all()")]),t._v("的"),a("code",[t._v("catch")]),t._v("方法。如果参数 Promise 实例没有定义"),a("code",[t._v("catch")]),t._v("方法，那么会调用"),a("code",[t._v("Promise.all()")]),t._v("的"),a("code",[t._v("catch")]),t._v("方法。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.all()")]),t._v("的参数可以不是数组，但必须具有 Iterator 接口，且返回的每个成员都是 Promise 实例。")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.race()")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Promise.race()")]),t._v("与"),a("code",[t._v("Promise.all()")]),t._v("类似，用于将多个 Promise 实例，包装成一个新的 Promise 实例。")]),t._v(" "),a("li",[a("code",[t._v("Promise.race()")]),t._v("的参数规则也与"),a("code",[t._v("Promise.all()")]),t._v("类似，接受一个以 Promise 实例作为数组成员的数组作为参数。")]),t._v(" "),a("li",[a("code",[t._v("Promise.race()")]),t._v("的包装实例状态是"),a("strong",[t._v("第一个改变状态的参数 Promise 实例的状态")]),t._v("。参数 Promise 实例的返回值会传递给包装实例的回调函数。")])])])]),t._v(" "),a("p",[t._v("最新方法有下面的几种：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Promise.allSettled()")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Promise.allSettled()")]),t._v("方法接受一组 Promise 实例作为参数，包装成一个新的 Promise 实例。只有等到"),a("strong",[t._v("所有这些参数实例都返回结果")]),t._v("，不管是 fulfilled 还是 rejected ，包装实例才会结束。")]),t._v(" "),a("li",[a("code",[t._v("Promise.allSettled()")]),t._v("方法返回的新的 Promise 实例，一旦结束，状态总是 fulfilled，不会变成 rejected。")]),t._v(" "),a("li",[t._v("状态变成 fulfilled 后，包装实例的监听函数接收到的参数是一个数组，每个数组成员对应一个传入"),a("code",[t._v("Promise.allSettled()")]),t._v("的 Promise 实例。")]),t._v(" "),a("li",[t._v("有时候，我们"),a("strong",[t._v("不关心异步操作的结果，只关心这些操作有没有结束")]),t._v("。这种场景下适用"),a("code",[t._v("Promise.allSettled()")]),t._v("方法。")]),t._v(" "),a("li",[t._v("ES2020 新加入。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.any()")])]),t._v(" "),a("ul",[a("li",[t._v("参数实例有一个变成 fulfilled 状态，包装实例就会变成 fulfilled 状态；如果所有参数实例都变成 rejected 状态，包装实例就会变成 rejected 状态。")]),t._v(" "),a("li",[t._v("仍处于"),a("strong",[t._v("提案")]),t._v("状态。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.try()")])]),t._v(" "),a("ul",[a("li",[t._v("不知道或者不想区分，函数 f 是同步函数还是异步操作，但是想用 Promise 来处理它。因为这样就可以不管 f 是否包含异步操作，都用 then 方法指定下一步流程，用 catch 方法处理 f 抛出的错误。")]),t._v(" "),a("li",[t._v("仍处于"),a("strong",[t._v("提案")]),t._v("状态。")])])])]),t._v(" "),a("h3",{attrs:{id:"promise-基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-基本使用"}},[t._v("#")]),t._v(" Promise 基本使用")]),t._v(" "),a("p",[t._v("Promise 最基本的使用方法如下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("新建一个 Promise 对象。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" promise "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... some code")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 异步操作成功 */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("调用这个 Promise 对象的"),a("code",[t._v("then")]),t._v("方法，注册回调函数。回调函数的参数是一个函数，参数函数的参数是 Promise 对象的返回值。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理value")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("注册"),a("code",[t._v("catch")]),t._v("方法用来捕捉并处理前面可能发生的错误。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("promise\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理value")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理error")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])])]),t._v(" "),a("p",[t._v("以上就是 Promise 最基本的使用方法。")]),t._v(" "),a("h2",{attrs:{id:"generator-co"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generator-co"}},[t._v("#")]),t._v(" Generator/co")]),t._v(" "),a("p",[t._v("Generator 生成器函数，在 async/await 出现之前可以用来做异步解决方案。一般来说需要配合 co 这个第三方库来使用。")]),t._v(" "),a("p",[t._v("现在一般已经不使用 Generator/co 进行异步编程。推荐使用 async/await 方案。")]),t._v(" "),a("p",[t._v("Generator 的本质用途是用来实现 Iterator 迭代器的，用在异步上是他的一个特殊用途。Generator 的详解可以参考"),a("RouterLink",{attrs:{to:"/frontend/JavaScript(4).html"}},[t._v("这里")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[t._v("#")]),t._v(" async/await")]),t._v(" "),a("p",[t._v("async/await 被称为 JS 中"),a("strong",[t._v("异步终极解决方案")]),t._v("。在 async 函数中使用 await，那么 await 这里的代码就会变成同步的，只有等"),a("strong",[t._v("await 后面的 Promise 执行完毕后")]),t._v("才会继续下去。")]),t._v(" "),a("p",[t._v("详细内容请参考[阮一峰的 async 部分]内容，这里只记录大纲以及重要性结论。")]),t._v(" "),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("h4",{attrs:{id:"async"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async"}},[t._v("#")]),t._v(" async")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("async 函数返回一个 Promise 对象")]),t._v("，可以使用 then 方法添加回调函数。")]),t._v(" "),a("li",[t._v("async 函数内部抛出错误，会导致"),a("strong",[t._v("返回的 Promise 对象变为 rejected 状态")]),t._v("。抛出的错误会被"),a("code",[t._v("catch")]),t._v("方法捕捉到。")]),t._v(" "),a("li",[t._v("一般来说，async 函数都需要返回")])]),t._v(" "),a("h4",{attrs:{id:"await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#await"}},[t._v("#")]),t._v(" await")]),t._v(" "),a("ul",[a("li",[t._v("在"),a("strong",[t._v("async 函数内部可以使用 await 命令")]),t._v("，表示等待一个异步函数的返回。"),a("strong",[t._v("await 不能够单独使用")]),t._v("。")]),t._v(" "),a("li",[t._v("正常情况下，"),a("strong",[t._v("await 命令后面是一个 Promise 对象，返回该对象的结果")]),t._v("。await 后面的 Promise 对象不必写"),a("code",[t._v("then")]),t._v(",因为 await 可以"),a("strong",[t._v("直接获取后面 Promise 对象的 resolved 状态")]),t._v("传递出来的参数。")]),t._v(" "),a("li",[t._v("如果 await 命令后面不是 Promise 对象，就直接返回对应的值；如果 await 命令后面是一个 thenable 对象，await 会将其等同于 Promise 对象。")])]),t._v(" "),a("h3",{attrs:{id:"错误处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[t._v("#")]),t._v(" 错误处理")]),t._v(" "),a("ul",[a("li",[t._v("如果 await 后面的异步操作出错，那么等同于 async 函数返回的 Promise 对象被 reject，可以被该对象的"),a("code",[t._v("catch")]),t._v("方法捕捉，reject 的参数会传入"),a("code",[t._v("catch")]),t._v("方法。")]),t._v(" "),a("li",[t._v("如果一个 async 函数中有多个 await 语句，任何一个 await 语句后面的 Promise 对象变为 reject 状态，整个 async 函数都会中断执行。")]),t._v(" "),a("li",[t._v("基于以上，可以"),a("strong",[t._v("将 await 语句放在"),a("code",[t._v("try...catch")]),t._v("结构里面")]),t._v("，这样不会耽误后面的代码执行；或者在 await 后面的 Promise 对象再跟一个"),a("code",[t._v("catch")]),t._v(" 方法，处理错误。")])]),t._v(" "),a("h3",{attrs:{id:"使用注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用注意点"}},[t._v("#")]),t._v(" 使用注意点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("最好把 await 命令放在"),a("code",[t._v("try...catch")]),t._v("代码块中。")])]),t._v(" "),a("li",[a("p",[t._v("多个 await 命令后面的异步操作，如果"),a("strong",[t._v("不存在继发关系，最好让他们同时触发")]),t._v("。同时触发有两种写法：")]),t._v(" "),a("ul",[a("li",[t._v("使用"),a("code",[t._v("Promise.all()")])]),t._v(" "),a("li",[t._v("见代码：")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法一")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法二")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fooPromise "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFoo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" barPromise "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" fooPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" barPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("async 函数可以保留运行堆栈.")])])]),t._v(" "),a("h3",{attrs:{id:"await-与循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#await-与循环"}},[t._v("#")]),t._v(" await 与循环")]),t._v(" "),a("ul",[a("li",[t._v("对于异步代码，"),a("strong",[t._v("forEach 并不能保证按顺序执行")]),t._v("。")]),t._v(" "),a("li",[t._v("想要在循环中使用 await ，需要"),a("strong",[t._v("使用"),a("code",[t._v("for... of")]),t._v(" 语句")]),t._v("。")])]),t._v(" "),a("p",[t._v("解决原理——Iterator")]),t._v(" "),a("h2",{attrs:{id:"参考出处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考出处"}},[t._v("#")]),t._v(" 参考出处")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰 ES6 教程-Promise"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/async",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰 ES6 教程-async"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/book/5bdc715fe51d454e755f75ef/section/5bdc7198518825171726cfce",target:"_blank",rel:"noopener noreferrer"}},[t._v("yck 小册"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5dd8b3a851882572f56b578f#heading-30",target:"_blank",rel:"noopener noreferrer"}},[t._v("神三元-原生 JS(下篇)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5e3b9ae26fb9a07ca714a5cc",target:"_blank",rel:"noopener noreferrer"}},[t._v("写代码像蔡徐抻-异步编程二三事"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5afe6d3bf265da0b9e654c4b",target:"_blank",rel:"noopener noreferrer"}},[t._v("蔓蔓雒轩-通俗易懂的 Promise"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/597724c26fb9a06bb75260e8",target:"_blank",rel:"noopener noreferrer"}},[t._v("艾特老干部-八段代码彻底掌握 Promise"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b31a4b7f265da595725f322",target:"_blank",rel:"noopener noreferrer"}},[t._v("lucefer-面试精选之 Promise"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5a04066351882517c416715d",target:"_blank",rel:"noopener noreferrer"}},[t._v("石墨文档-Promise 必知必会"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/596e142d5188254b532ce2da",target:"_blank",rel:"noopener noreferrer"}},[t._v("陈惠超-理解 async/await"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b1ffff96fb9a01e345ba704",target:"_blank",rel:"noopener noreferrer"}},[t._v("大 Y-一次性让你懂 async/await"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5a9516885188257a6b061d72",target:"_blank",rel:"noopener noreferrer"}},[t._v("limingru-与 Promise 血脉相连的 async/await"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);